HTML/CSS


- Image : <img src="" alt="" width= ""/>

- Table : 
<table>
<thead> 
<th>Colonne1</th>
<th> Colonne2</th>     
</thead>

<tbody>         //the component or ro<s
<tr>
<td>   Pacific ocean       </td>        //the data cells
<td>   Mediteranean ocean       </td>
</tr>
</tbody>
<table>


- Form 

<form>
<input type="text" placeholder = "fullname" name = "name">           // type can also be password to blur the input
<input type="radio" placeholder = "green" name = "color"> Green    // radio type = tickable boxes

<input type = "Country" list ="countries name = "Country">       // the list name and the id of the datalist is the same
<datalist id = "countries">
  <Option value ="Afghanistan">
  <Option value ="Morroco">
  <Option value ="France">

<input type = "submit">
</form>




- CSS

<li><a href = "google.com>Google</a></li>  // a is for links

<h1 style = "color : blue: text-align : center"></h1> or put it in <head> <style> h1 { color: blue;  text-align: center} </style></head>

To link a css file to an html page : <head> <link rel = "stylesheet" href = "styles.css"> </head>    // href is the name of the css file 
We can style a div 

Padding : space between an element and the edges of the div/ Margin : space between the div and other elements

font-family/font-size/font-weight


- If we want to style one specific h1 element, we give it and "ID" and use it on style ex : id ="foo"/   <style> #foo{color:blue} </style>

- If we want to do the same as before but for a lot of element(we cant give the same id), we give them the same class name <h1 class="W"> and to style we use dot : <style> .W {}</style>

The specificity problem in CSS :  IICT : inline(styliser dans la meme ligne) then id then class then type

CSS selectors : 

a,b : multiple
a b : descendent selector (a>b a is direct children and we want to style it)
a [attribute] : style a specific attribute (for example a[href="google;com]{}  )
button : hover{} : change style when we hover over the button



Responsive design :

- Viewport : <meta viewport" content = "width=device-width, initial-scale=1.0> // adapt the width to the device

Mediaqueries : adapt the elements to where its rendered (ex a phone)

- For example change the style = 

<style> 
@media(min-width = 600px) {body { background-color:red}}
@media(max-width = 599px) {body { background-color:blue}}

</style>


Mediaqueries : adapt the elements to where its rendered (ex a phone)

Flexbox: if we have multiple elements


BOOTSTRAP : 

Add this to the head : <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">





SAS : CSS with variables :


$color : red;

ul {
color: $color;
}

- Inheritance :

%message{ font-family: sans-sherif background-color: green}

.success { @extend %message;  backgroung-colord: blue}

